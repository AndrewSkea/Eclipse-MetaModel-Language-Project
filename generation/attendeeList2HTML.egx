import "../tools.eol";
pre { 
	"Transformation starting".println(); 
	var outDirLib : String = "gen/";
  	var extension : String = ".html";
}

rule AttendeeList2HTML
	transform seatingPlan : SeatingPlan {
	guard : seatingPlan.attendees.size() > 0
	template : "attendeeList2HTML.egl"
	parameters: Map{"attendees"=seatingPlan.attendees.makeNACompatiable()}
	target : outDirLib + "attendeeList" + extension
}


rule AttendeeInvitations2HTML
	transform attendee : Attendee {
	guard : attendee.mySeat.isDefined() and attendee.mySeat.myTable.isDefined()
	template : "attendeeInvitation2HTML.egl"
	parameters {
		var failedWishes = attendee.GetFailedWishes();
		return Map{'attendee'=attendee, 
					'tableAtt'= attendee.mySeat.myTable.seats.attendeeSeat.select(d|d.isDefined()).asOrderedSet().makeNACompatiable(),
					'failedLikes' = failedWishes.keySet().select(k | failedWishes.get(k).literal=="Like"),
					'failedDislikes' = failedWishes.keySet().select(k | failedWishes.get(k).literal=="Dislike")
					};
	}
	target : outDirLib + "invitations/" + attendee.lastName + "_" + attendee.firstName + "_" + attendee.attendeeID + extension
}


post { "Transformation finished".println(); } 
